{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/auth.interceptor.ts","./src/app/_services/auth.service.ts","./src/app/_services/employee.service.ts","./src/app/_services/employee.ts","./src/app/_services/token-storage.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/create-employee/create-employee.component.ts","./src/app/create-employee/create-employee.component.html","./src/app/employee-details/employee-details.component.ts","./src/app/employee-details/employee-details.component.html","./src/app/employee-list/employee-list.component.ts","./src/app/employee-list/employee-list.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/update-employee/update-employee.component.ts","./src/app/update-employee/update-employee.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport {TokenStorageService} from '../_services/token-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private token: TokenStorageService,\n    private router: Router){}\n\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const token = this.token.getToken();\n    if (token != null) {\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n\n}\n","import { HTTP_INTERCEPTORS, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\nimport { TokenStorageService } from '../_services/token-storage.service';\nimport { Observable } from 'rxjs';\nimport {Router} from '@angular/router';\n\nconst TOKEN_HEADER_KEY = 'Authorization';       // for Spring Boot back-end\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(\n    private token: TokenStorageService,\n    private router: Router\n  ) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    console.log(\"Request Intercepted\");\n    let authReq = req;\n    const token = this.token.getToken();\n    if (token != null) {\n      // for Spring Boot back-end\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\n    } else {\n      this.router.navigate(['login']);\n    }\n    return next.handle(authReq);\n  }\n}\n\nexport const authInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst AUTH_API = 'http://localhost:8080/api/auth/';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http: HttpClient) { }\n\n  login(username: string, password: string): Observable<any> {\n    return this.http.post(AUTH_API + 'signin', {\n      username,\n      password\n    }, httpOptions);\n  }\n\n  register(username: string, email: string, password: string): Observable<any> {\n    return this.http.post(AUTH_API + 'signup', {\n      username,\n      email,\n      password\n    }, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { Employee } from './employee';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  private baseURL = 'http://localhost:8080/api/v1/employees';\n\n  constructor(private httpClient: HttpClient) { }\n\n  getEmployeesList(): Observable<Employee[]>{\n    return this.httpClient.get<Employee[]>(`${this.baseURL}`);\n  }\n\n  createEmployee(employee: Employee): Observable<Object>{\n    return this.httpClient.post(`${this.baseURL}`, employee);\n  }\n\n  getEmployeeById(id: number): Observable<Employee>{\n    return this.httpClient.get<Employee>(`${this.baseURL}/${id}`);\n  }\n\n  updateEmployee(id: number, employee: Employee): Observable<Object>{\n    return this.httpClient.put(`${this.baseURL}/${id}`, employee);\n  }\n\n  deleteEmployee(id: number): Observable<Object>{\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n}\n","export class Employee {\n    id: number;\n    firstName: string;\n    lastName: string;\n    email: string;\n}\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n  constructor() { }\n\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return window.sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUser(user: any): void {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    const user = window.sessionStorage.getItem(USER_KEY);\n    if (user) {\n      return JSON.parse(user);\n    }\n\n    return {};\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport {RegisterComponent} from './register/register.component';\nimport {LoginComponent} from './login/login.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {AuthGuard} from './_helpers/auth.guard';\n\nconst routes: Routes = [\n  {path: 'employees', canActivate: [AuthGuard], component: EmployeeListComponent},\n  {path: 'create-employee', canActivate: [AuthGuard], component: CreateEmployeeComponent},\n  {path: '', redirectTo: 'login', pathMatch: 'full'},\n  {path: 'update-employee/:id', canActivate: [AuthGuard], component: UpdateEmployeeComponent},\n  {path: 'employee-details/:id', canActivate: [AuthGuard], component: EmployeeDetailsComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'profile', canActivate: [AuthGuard], component: ProfileComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {TokenStorageService} from './_services/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Angular - Spring Boot - Spring Security with JWT';\n  private roles: string[] = [];\n  isLoggedIn = false;\n  showAdminBoard = false;\n  showModeratorBoard = false;\n  username?: string;\n\n  constructor(\n    private tokenStorageService: TokenStorageService,\n    private router : Router\n  ) { }\n\n  ngOnInit(): void {\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\n\n    console.log(\"Logged IN : \",this.tokenStorageService.getToken());\n\n    if (this.isLoggedIn) {\n      const user = this.tokenStorageService.getUser();\n      console.log(user);\n      this.roles = user.roles;\n\n      this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n      this.showModeratorBoard = this.roles.includes('ROLE_MODERATOR');\n\n      this.username = user.username;\n    }\n  }\n\n  logout(): void {\n    this.tokenStorageService.signOut();\n    this.isLoggedIn = false;\n    this.router.navigate(['login']).then(r =>\n      window.location.reload()\n    );\n  }\n}\n","<nav class=\"navbar justify-content-center navbar-expand-sm bg-info navbar-dark\">\n  <h3 class=\"text-center font-weight-bolder\"> {{title}} </h3>\n</nav>\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n  <ul class=\"navbar-nav justify-content-center\" *ngIf=\"!isLoggedIn\">\n    <li class=\"nav-item\">\n      <a href=\"/register\" class=\"nav-link font-weight-bolder\" routerLink=\"register\">Register</a>\n    </li>\n    <li class=\"nav-item\">\n      <a href=\"/login\" class=\"nav-link font-weight-bolder\" routerLink=\"login\">Login</a>\n    </li>\n  </ul>\n\n  <ul class=\"navbar-nav ml-auto\" *ngIf=\"isLoggedIn\">\n    <li class=\"nav-item\">\n      <a href=\"/profile\" class=\"nav-link\" routerLink=\"profile\">{{ username }}</a>\n    </li>\n    <li class = \"nav-item\">\n      <a routerLink=\"employees\" routerLinkActive=\"active\" class=\"nav-link font-weight-bolder\" >Employee List</a>\n    </li>\n    <li class = \"nav-item\">\n      <a routerLink=\"create-employee\" routerLinkActive=\"active\" class=\"nav-link font-weight-bolder\" >Add Employee</a>\n    </li>\n    <li class=\"nav-item\">\n      <a href class=\"nav-link\" (click)=\"logout()\">LogOut</a>\n    </li>\n  </ul>\n</nav>\n<br>\n<div class = \"container\">\n    <router-outlet></router-outlet>\n</div>\n<footer class = \"footer\">\n    <div class = \"container\">\n        <h5> All Rights Reserved 2022 </h5>\n    </div>\n</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { FormsModule} from '@angular/forms';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component'\nimport {authInterceptorProviders} from './_helpers/auth.interceptor';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport {ProfileComponent} from './profile/profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeListComponent,\n    CreateEmployeeComponent,\n    ProfileComponent,\n    UpdateEmployeeComponent,\n    EmployeeDetailsComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [authInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../_services/employee';\nimport { EmployeeService } from '../_services/employee.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\n  employee: Employee = new Employee();\n  noAccess = false;\n  constructor(private employeeService: EmployeeService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.noAccess = false;\n  }\n\n  saveEmployee(){\n    this.employeeService.createEmployee(this.employee).subscribe( data => {\n      console.log(data);\n      this.goToEmployeeList();\n    },\n    error => {\n      console.log(error);\n      if (error.status === 403) {\n        this.noAccess = true;\n      }\n    });\n  }\n\n  goToEmployeeList(){\n    this.router.navigate(['/employees']);\n  }\n\n  onSubmit(){\n    console.log(this.employee);\n    this.saveEmployee();\n  }\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n\n    <h3> Add Employee </h3>\n    <br>\n    <form (ngSubmit) = \"onSubmit()\">\n\n        <div class=\"form-group\">\n            <label> First Name</label>\n            <input type=\"text\" class =\"form-control\" id = \"firstName\"\n                [(ngModel)] = \"employee.firstName\" name = \"firstName\">\n        </div>\n\n        <div class=\"form-group\">\n            <label> Last Name</label>\n            <input type=\"text\" class =\"form-control\" id = \"lastName\"\n                [(ngModel)] = \"employee.lastName\" name = \"lastName\">\n        </div>\n\n        <div class=\"form-group\">\n            <label> Email Id</label>\n            <input type=\"text\" class =\"form-control\" id = \"email\"\n                [(ngModel)] = \"employee.email\" name = \"email\">\n        </div>\n\n      <div class=\"form-group\">\n        <p *ngIf=\"noAccess\" class=\"text-danger\"> You don't have access to add employee</p>\n        <button class=\"btn btn-primary btn-block\">Submit</button>\n      </div>\n\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../_services/employee';\nimport { ActivatedRoute } from '@angular/router';\nimport { EmployeeService } from '../_services/employee.service';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.css']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\n  id: number\n  employee: Employee\n  constructor(private route: ActivatedRoute, private employeService: EmployeeService) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n\n    this.employee = new Employee();\n    this.employeService.getEmployeeById(this.id).subscribe( data => {\n      this.employee = data;\n    });\n  }\n\n}\n","<h3>Employee Details</h3>\n<br>\n<div>\n    <div>\n        <label> <b> First Name: </b></label> {{employee.firstName}}\n    </div>\n    <div>\n        <label> <b> Last Name: </b></label> {{employee.lastName}}\n    </div>\n    <div>\n        <label> <b> Email Id: </b></label> {{employee.email}}\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../_services/employee';\nimport { EmployeeService } from '../_services/employee.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  employees: Employee[];\n  noAccess = false;\n\n  constructor(private employeeService: EmployeeService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.noAccess = false;\n    this.getEmployees();\n  }\n\n  private getEmployees(){\n    this.employeeService.getEmployeesList().subscribe(data => {\n      this.employees = data;\n    });\n  }\n\n  employeeDetails(id: number){\n    this.router.navigate(['employee-details', id]);\n  }\n\n  updateEmployee(id: number){\n    this.router.navigate(['update-employee', id]);\n  }\n\n  deleteEmployee(id: number){\n    this.employeeService.deleteEmployee(id).subscribe( data => {\n      console.log(data);\n      this.getEmployees();\n    },\n      error => {\n        if (error.status === 403) {\n          this.noAccess = true;\n        }\n      });\n  }\n}\n","<h2> Employee List</h2>\n<table class = \"table table-striped\">\n    <thead>\n        <tr>\n            <th> First Name</th>\n            <th> Last Name </th>\n            <th> Email Id</th>\n            <th> Actions </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor = \"let employee of employees\" >\n            <td> {{ employee.firstName }} </td>\n            <td> {{ employee.lastName }} </td>\n            <td> {{ employee.email }} </td>\n            <td>\n                <button (click) = \"updateEmployee(employee.id)\" class = \"btn btn-info\"> Update</button>\n                <button (click) = \"deleteEmployee(employee.id)\" class = \"btn btn-danger\" style=\"margin-left: 10px\"> Delete</button>\n                <button (click) = \"employeeDetails(employee.id)\" class = \"btn btn-info\" style=\"margin-left: 10px\"> View</button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n<br>\n<p *ngIf=\"noAccess\" class=\"text-danger\"> You don't have access to delete employee</p>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { TokenStorageService } from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {\n    username: null,\n    password: null\n  };\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService) { }\n\n  ngOnInit(): void {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getUser().roles;\n    }\n  }\n\n  onSubmit(): void {\n    const { username, password } = this.form;\n\n    this.authService.login(username, password).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveUser(data);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getUser().roles;\n        this.reloadPage();\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  reloadPage(): void {\n    window.location.reload();\n  }\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <h3> Login </h3>\n    <br>\n    <form\n      *ngIf=\"!isLoggedIn\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"username\"\n          [(ngModel)]=\"form.username\"\n          required\n          #username=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"username.errors && f.submitted\"\n        >\n          Username is required!\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"5\"\n          #password=\"ngModel\"\n        />\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"password.errors && f.submitted\"\n        >\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      <br>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">\n          Login\n        </button>\n      </div>\n      <div class=\"form-group\">\n        <div\n          class=\"alert alert-danger\"\n          role=\"alert\"\n          *ngIf=\"f.submitted && isLoginFailed\"\n        >\n          Login failed: {{ errorMessage }}\n        </div>\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isLoggedIn\">\n      Logged in as {{ roles }}.\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from '../_services/token-storage.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  currentUser: any;\n\n  constructor(private token: TokenStorageService) { }\n\n  ngOnInit(): void {\n    this.currentUser = this.token.getUser();\n  }\n}\n","<div class=\"container\" *ngIf=\"currentUser; else loggedOut\">\n  <nav class=\"navbar navbar-light bg-info\">\n    <h4>\n      Profile : <strong>{{ currentUser.username }}</strong>\n    </h4>\n  </nav>\n  <br>\n  <p>\n    <strong>Token:</strong>\n    {{ currentUser.accessToken.substring(0, 20) }} ...\n    {{ currentUser.accessToken.substr(currentUser.accessToken.length - 20) }}\n  </p>\n  <p>\n    <strong>Email:</strong>\n    {{ currentUser.email }}\n  </p>\n  <strong>Roles:</strong>\n  <ul>\n    <li *ngFor=\"let role of currentUser.roles\">\n      {{ role }}\n    </li>\n  </ul>\n</div>\n\n<ng-template #loggedOut>\n  Please login.\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: any = {\n    username: null,\n    email: null,\n    password: null\n  };\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    const { username, email, password } = this.form;\n\n    this.authService.register(username, email, password).subscribe(\n      data => {\n        console.log(data);\n        this.isSuccessful = true;\n        this.isSignUpFailed = false;\n      },\n      err => {\n        this.errorMessage = err.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n}\n","<div class=\"col-md-12\">\n  <div class=\"card card-container\">\n    <h3> Register </h3>\n    <br>\n    <form\n      *ngIf=\"!isSuccessful\"\n      name=\"form\"\n      (ngSubmit)=\"f.form.valid && onSubmit()\"\n      #f=\"ngForm\"\n      novalidate\n    >\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"username\"\n          [(ngModel)]=\"form.username\"\n          required\n          minlength=\"3\"\n          maxlength=\"20\"\n          #username=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"username.errors && f.submitted\">\n          <div *ngIf=\"username.errors.required\">Username is required</div>\n          <div *ngIf=\"username.errors.minlength\">\n            Username must be at least 3 characters\n          </div>\n          <div *ngIf=\"username.errors.maxlength\">\n            Username must be at most 20 characters\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"email\"\n          class=\"form-control\"\n          name=\"email\"\n          [(ngModel)]=\"form.email\"\n          required\n          email\n          #email=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"email.errors && f.submitted\">\n          <div *ngIf=\"email.errors.required\">Email is required</div>\n          <div *ngIf=\"email.errors.email\">\n            Email must be a valid email address\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          [(ngModel)]=\"form.password\"\n          required\n          minlength=\"5\"\n          #password=\"ngModel\"\n        />\n        <div class=\"alert-danger\" *ngIf=\"password.errors && f.submitted\">\n          <div *ngIf=\"password.errors.required\">Password is required</div>\n          <div *ngIf=\"password.errors.minlength\">\n            Password must be at least 6 characters\n          </div>\n        </div>\n      </div>\n      <br>\n      <div class=\"form-group\">\n        <button class=\"btn btn-primary btn-block\">Sign Up</button>\n      </div>\n\n      <div class=\"alert alert-warning\" *ngIf=\"f.submitted && isSignUpFailed\">\n        Signup failed!<br />{{ errorMessage }}\n      </div>\n    </form>\n\n    <div class=\"alert alert-success\" *ngIf=\"isSuccessful\">\n      Your registration is successful!\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../_services/employee.service';\nimport { Employee } from '../_services/employee';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})\nexport class UpdateEmployeeComponent implements OnInit {\n\n  id: number;\n  employee: Employee = new Employee();\n  constructor(private employeeService: EmployeeService,\n              private route: ActivatedRoute,\n              private router: Router) { }\n  noAccess : boolean = false;\n\n  ngOnInit(): void {\n    this.noAccess = false;\n    this.id = this.route.snapshot.params.id;\n\n    this.employeeService.getEmployeeById(this.id).subscribe(data => {\n      this.employee = data;\n    }, error => console.log(error));\n  }\n\n  onSubmit(){\n    this.employeeService.updateEmployee(this.id, this.employee).subscribe(\n      data => { this.goToEmployeeList(); },\n      error => {\n        console.log(error.status);\n        if ( error.status === 403 ) {\n          this.noAccess = true;\n          console.log('No Access');\n        }\n      }\n      );\n  }\n\n  goToEmployeeList(){\n    this.router.navigate(['/employees']);\n  }\n}\n","<div class=\"col-md-6 offset-md-3\">\n    <h3> Update Employee </h3>\n    <form (ngSubmit) = \"onSubmit()\">\n\n        <div class=\"form-group\">\n            <label> First Name</label>\n            <input type=\"text\" class =\"form-control\" id = \"firstName\"\n                [(ngModel)] = \"employee.firstName\" name = \"firstName\">\n        </div>\n\n        <div class=\"form-group\">\n            <label> Last Name</label>\n            <input type=\"text\" class =\"form-control\" id = \"lastName\"\n                [(ngModel)] = \"employee.lastName\" name = \"lastName\">\n        </div>\n\n        <div class=\"form-group\">\n            <label> Email Id</label>\n            <input type=\"text\" class =\"form-control\" id = \"email\"\n                [(ngModel)] = \"employee.email\" name = \"email\">\n        </div>\n\n        <p *ngIf=\"noAccess\" class=\"text-danger\"> You don't have access to update employee</p>\n        <button class = \"btn btn-success\" type =\"submit\">Submit </button>\n\n\n    </form>\n\n    </div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}